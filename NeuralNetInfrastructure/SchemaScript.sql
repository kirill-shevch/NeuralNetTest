CREATE DATABASE IF NOT EXISTS neuralNetTest;
CREATE USER IF NOT EXISTS  neuralnettestuser IDENTIFIED BY 'P@ssw0rd' PASSWORD EXPIRE NEVER;
GRANT ALL ON neuralNetTest.* TO neuralnettestuser;

use neuralNetTest;

CREATE TABLE IF NOT EXISTS Company(
	Id INT NOT NULL AUTO_INCREMENT,
	Name VARCHAR(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
	Signature VARCHAR(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,

	PRIMARY KEY (Id)
);

CREATE TABLE IF NOT EXISTS Price(
	Id INT NOT NULL AUTO_INCREMENT,
	CompanyId INT NOT NULL,
	Date DATETIME(0) NOT NULL,
	PriceValue DOUBLE NOT NULL,
	IsPredicted BIT(1) NOT NULL DEFAULT 0,

	PRIMARY KEY (Id),
	FOREIGN KEY (CompanyId) REFERENCES Company(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS NeuralNet(
	Id INT NOT NULL AUTO_INCREMENT,
	ErrorMSE DOUBLE NOT NULL,
	MSEcounter BIGINT NOT NULL,
	LearningSpeed DOUBLE NOT NULL,
	Moment DOUBLE NOT NULL,

	PRIMARY KEY (Id)
);


CREATE TABLE IF NOT EXISTS Neuron(
	Id INT NOT NULL AUTO_INCREMENT,
	NeuronType SMALLINT NOT NULL,
	NeuralNetId INT NOT NULL,

	PRIMARY KEY (Id),
	FOREIGN KEY (NeuralNetId) REFERENCES NeuralNet(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
);


CREATE TABLE IF NOT EXISTS Synapse(
	Id INT NOT NULL AUTO_INCREMENT,
	NeuronIdInput INT NOT NULL,
	NeuronIdOutput INT NOT NULL,
	NeuralNetId INT NOT NULL,
	Weight DOUBLE NOT NULL,

	PRIMARY KEY (Id),
	FOREIGN KEY (NeuralNetId) REFERENCES NeuralNet(Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
	FOREIGN KEY (NeuronIdInput) REFERENCES Neuron(Id) ON DELETE RESTRICT ON UPDATE RESTRICT,
	FOREIGN KEY (NeuronIdOutput) REFERENCES Neuron(Id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

INSERT INTO Company
(Id, Name, Signature)
VALUES
 (1, 'Microsoft Corporation', 'MSFT'),
 (2, 'Apple Inc.', 'AAPL'),
 (3, 'Facebook Inc.', 'FB'),
 (4, 'Zynga Inc.', 'ZNGA'),
 (5, 'NVIDIA Corporation', 'NVDA')
;